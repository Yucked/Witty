using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace WitSharp.Objects
{
    public class MeaningObject
    {
        internal MeaningObject()
        {
        }

        /// <summary>Either the ID you passed to the API or an ID generated by the API</summary>
        [JsonProperty("msg_id")]
        public string MessageId { get; internal set; }

        /// <summary>Either the text sent in the q argument or the transcript of the speech input. This value should be used only for debug as Wit.ai focuses on entities.</summary>
        [JsonProperty("_text")]
        public string Text { get; internal set; }

        /// <summary>Object of entities. Each entity will contain an array [] of values even if there is only one value.</summary>
        [JsonProperty("entities")]
        public Entities Entities { get; internal set; }
    }

    /// <summary> Provides a list of all intents</summary>
    public class Entities
    {
        [JsonProperty("intent")] public List<Bye> Intent { get; set; }

        [JsonProperty("age_of_person")] public List<AgeOfPerson> AgeOfPerson { get; set; }

        [JsonProperty("agenda_entry")] public List<AgeOfPerson> AgendaEntry { get; set; }

        [JsonProperty("amount_of_money")] public List<AmountOfMoney> AmountOfMoney { get; set; }

        [JsonProperty("bye")] public List<Bye> Bye { get; set; }

        [JsonProperty("contact")] public List<AgeOfPerson> Contact { get; set; }

        [JsonProperty("distance")] public List<AmountOfMoney> Distance { get; set; }

        [JsonProperty("duration")] public List<Duration> Duration { get; set; }

        [JsonProperty("email")] public List<Bye> Email { get; set; }

        [JsonProperty("greetings")] public List<Bye> Greetings { get; set; }

        [JsonProperty("local_search_query")] public List<AgeOfPerson> LocalSearchQuery { get; set; }

        [JsonProperty("location")] public List<Location> Location { get; set; }

        [JsonProperty("math_expression")] public List<AgeOfPerson> MathExpression { get; set; }

        [JsonProperty("message_body")] public List<AgeOfPerson> MessageBody { get; set; }

        [JsonProperty("notable_person")] public List<NotablePerson> NotablePerson { get; set; }

        [JsonProperty("number")] public List<Number> Number { get; set; }

        [JsonProperty("on_off")] public List<Bye> OnOff { get; set; }

        [JsonProperty("ordinal")] public List<Number> Ordinal { get; set; }

        [JsonProperty("phone_number")] public List<Bye> PhoneNumber { get; set; }

        [JsonProperty("phrase_to_translate")] public List<AgeOfPerson> PhraseToTranslate { get; set; }

        [JsonProperty("quantity")] public List<Quantity> Quantity { get; set; }

        [JsonProperty("reminder")] public List<AgeOfPerson> Reminder { get; set; }

        [JsonProperty("search_query")] public List<AgeOfPerson> SearchQuery { get; set; }

        [JsonProperty("sentiment")] public List<Bye> Sentiment { get; set; }

        [JsonProperty("temperature")] public List<AmountOfMoney> Temperature { get; set; }

        [JsonProperty("thanks")] public List<Bye> Thanks { get; set; }

        [JsonProperty("url")] public List<Url> Url { get; set; }

        [JsonProperty("volume")] public List<Number> Volume { get; set; }

        [JsonProperty("wikipedia_search_query")]
        public List<AgeOfPerson> WikipediaSearchQuery { get; set; }

        [JsonProperty("wolfram_search_query")] public List<AgeOfPerson> WolframSearchQuery { get; set; }

        [JsonProperty("datetime")] public List<Datetime> Datetime { get; set; }
    }

    public class AgeOfPerson
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("value")] public string Value { get; set; }

        [JsonProperty("type")] public string Type { get; set; }
    }

    public class AmountOfMoney
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("unit")] public string Unit { get; set; }

        [JsonProperty("to", NullValueHandling = NullValueHandling.Ignore)]
        public NormalizedClass To { get; set; }

        [JsonProperty("from")] public NormalizedClass From { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public long? Value { get; set; }
    }

    public class NormalizedClass
    {
        [JsonProperty("value")] public long Value { get; set; }

        [JsonProperty("unit")] public string Unit { get; set; }
    }

    public class Bye
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("value")] public string Value { get; set; }
    }

    public class Datetime
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("values")] public List<DatetimeValue> Values { get; set; }

        [JsonProperty("to")] public DatetimeFrom To { get; set; }

        [JsonProperty("from")] public DatetimeFrom From { get; set; }

        [JsonProperty("value")] public DateTimeOffset Value { get; set; }

        [JsonProperty("grain")] public string Grain { get; set; }

        [JsonProperty("type")] public string Type { get; set; }
    }

    public class DatetimeFrom
    {
        [JsonProperty("value")] public DateTimeOffset Value { get; set; }

        [JsonProperty("grain")] public string Grain { get; set; }
    }

    public class DatetimeValue
    {
        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Value { get; set; }

        [JsonProperty("grain", NullValueHandling = NullValueHandling.Ignore)]
        public string Grain { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("to", NullValueHandling = NullValueHandling.Ignore)]
        public DatetimeFrom To { get; set; }

        [JsonProperty("from", NullValueHandling = NullValueHandling.Ignore)]
        public DatetimeFrom From { get; set; }
    }

    public class Duration
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("second")] public long Second { get; set; }

        [JsonProperty("value")] public long Value { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("unit")] public string Unit { get; set; }

        [JsonProperty("normalized")] public NormalizedClass Normalized { get; set; }
    }

    public class Location
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("value")] public string Value { get; set; }

        [JsonProperty("resolved")] public Resolved Resolved { get; set; }
    }

    public class Resolved
    {
        [JsonProperty("values")] public List<ResolvedValue> Values { get; set; }
    }

    public class ResolvedValue
    {
        [JsonProperty("name")] public string Name { get; set; }

        [JsonProperty("grain")] public string Grain { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("timezone")] public string Timezone { get; set; }

        [JsonProperty("coords")] public Coords Coords { get; set; }

        [JsonProperty("external")] public PurpleExternal External { get; set; }
    }

    public class Coords
    {
        [JsonProperty("lat")] public double Lat { get; set; }

        [JsonProperty("long")] public double Long { get; set; }
    }

    public class PurpleExternal
    {
        [JsonProperty("geonames")] public string Geonames { get; set; }

        [JsonProperty("wikipedia")] public string Wikipedia { get; set; }
    }

    public class NotablePerson
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("value")] public NotablePersonValue Value { get; set; }

        [JsonProperty("type")] public string Type { get; set; }
    }

    public class NotablePersonValue
    {
        [JsonProperty("name")] public string Name { get; set; }

        [JsonProperty("external")] public FluffyExternal External { get; set; }
    }

    public class FluffyExternal
    {
        [JsonProperty("wikidata")] public string Wikidata { get; set; }

        [JsonProperty("wikipedia")] public string Wikipedia { get; set; }
    }

    public class Number
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("value")] public long Value { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("unit", NullValueHandling = NullValueHandling.Ignore)]
        public string Unit { get; set; }
    }

    public class Quantity
    {
        [JsonProperty("confidence")] public long Confidence { get; set; }

        [JsonProperty("value")] public long Value { get; set; }

        [JsonProperty("type")] public string Type { get; set; }

        [JsonProperty("product")] public string Product { get; set; }

        [JsonProperty("unit")] public string Unit { get; set; }

        [JsonProperty("from")] public QuantityFrom From { get; set; }
    }

    public class QuantityFrom
    {
        [JsonProperty("value")] public long Value { get; set; }

        [JsonProperty("product")] public string Product { get; set; }

        [JsonProperty("unit")] public string Unit { get; set; }
    }

    public class Url
    {
        [JsonProperty("confidence")] public double Confidence { get; set; }

        [JsonProperty("domain")] public string Domain { get; set; }

        [JsonProperty("value")] public string Value { get; set; }
    }

    public class Stats
    {
        internal Stats()
        {
        }

        [JsonProperty("total_time")] public int TotalTime { get; internal set; }
    }
}