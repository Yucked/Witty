using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace WitSharp.Objects
{
    public class MeaningObject
    {
        internal MeaningObject()
        {
        }

        /// <summary>Either the ID you passed to the API or an ID generated by the API</summary>
        [JsonProperty("msg_id")]
        public string MessageId { get; internal set; }

        /// <summary>Either the text sent in the q argument or the transcript of the speech input. This value should be used only for debug as Wit.ai focuses on entities.</summary>
        [JsonProperty("_text")]
        public string Text { get; internal set; }

        /// <summary>Object of entities. Each entity will contain an array [] of values even if there is only one value.</summary>
        [JsonProperty("entities")]
        public Entities Entities { get; internal set; }
    }

    /// <summary> Provides a list of all intents</summary>
    public class Entities
    {
        internal Entities(){}
        [JsonProperty("intent")] 
        public List<CommonEntity> Intent { get; internal set; }

        [JsonProperty("age_of_person")] 
        public List<CommonEntity> AgeOfPerson { get; internal set; }

        [JsonProperty("agenda_entry")] 
        public List<CommonEntity> AgendaEntry { get; internal set; }

        [JsonProperty("amount_of_money")] 
        public List<AmountOfMoney> AmountOfMoney { get; internal set; }

        [JsonProperty("bye")] 
        public List<CommonEntity> Bye { get; internal set; }

        [JsonProperty("contact")] 
        public List<CommonEntity> Contact { get; internal set; }

        [JsonProperty("distance")] 
        public List<AmountOfMoney> Distance { get; internal set; }

        [JsonProperty("duration")] 
        public List<Duration> Duration { get; internal set; }

        [JsonProperty("email")] 
        public List<CommonEntity> Email { get; internal set; }

        [JsonProperty("greetings")] 
        public List<CommonEntity> Greetings { get; internal set; }

        [JsonProperty("local_search_query")] 
        public List<CommonEntity> LocalSearchQuery { get; internal set; }

        [JsonProperty("location")] 
        public List<Location> Location { get; internal set; }

        [JsonProperty("math_expression")] 
        public List<CommonEntity> MathExpression { get; internal set; }

        [JsonProperty("message_body")] 
        public List<CommonEntity> MessageBody { get; internal set; }

        [JsonProperty("notable_person")] 
        public List<NotablePerson> NotablePerson { get; internal set; }

        [JsonProperty("number")] 
        public List<Number> Number { get; internal set; }

        [JsonProperty("on_off")] 
        public List<CommonEntity> OnOff { get; internal set; }

        [JsonProperty("ordinal")] 
        public List<Number> Ordinal { get; internal set; }

        [JsonProperty("phone_number")] 
        public List<CommonEntity> PhoneNumber { get; internal set; }

        [JsonProperty("phrase_to_translate")] 
        public List<CommonEntity> PhraseToTranslate { get; internal set; }

        [JsonProperty("quantity")] 
        public List<Quantity> Quantity { get; internal set; }

        [JsonProperty("reminder")] 
        public List<CommonEntity> Reminder { get; internal set; }

        [JsonProperty("search_query")] 
        public List<CommonEntity> SearchQuery { get; internal set; }

        [JsonProperty("sentiment")] 
        public List<CommonEntity> Sentiment { get; internal set; }

        [JsonProperty("temperature")] 
        public List<AmountOfMoney> Temperature { get; internal set; }

        [JsonProperty("thanks")] 
        public List<CommonEntity> Thanks { get; internal set; }

        [JsonProperty("url")] 
        public List<Url> Url { get; internal set; }

        [JsonProperty("volume")] 
        public List<Number> Volume { get; internal set; }

        [JsonProperty("wikipedia_search_query")]
        public List<CommonEntity> WikipediaSearchQuery { get; internal set; }

        [JsonProperty("wolfram_search_query")] 
        public List<CommonEntity> WolframSearchQuery { get; internal set; }

        [JsonProperty("datetime")] 
        public List<Datetime> Datetime { get; internal set; }
    }

    public class CommonEntity
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("value")] 
        public string Value { get; internal set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; internal set; }
    }

    public class AmountOfMoney
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("unit")] 
        public string Unit { get; internal set; }

        [JsonProperty("to", NullValueHandling = NullValueHandling.Ignore)]
        public NormalizedClass To { get; internal set; }

        [JsonProperty("from")] public NormalizedClass From { get; internal set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public int? Value { get; internal set; }
    }

    public class NormalizedClass
    {
        [JsonProperty("value")] 
        public int Value { get; internal set; }

        [JsonProperty("unit")] 
        public string Unit { get; internal set; }
    }

    public class Datetime
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("values")] 
        public List<DatetimeValue> Values { get; internal set; }

        [JsonProperty("to")] 
        public DatetimeFrom To { get; internal set; }

        [JsonProperty("from")] 
        public DatetimeFrom From { get; internal set; }

        [JsonProperty("value")] 
        public DateTimeOffset Value { get; internal set; }

        [JsonProperty("grain")] 
        public string Grain { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }
    }

    public class DatetimeFrom
    {
        [JsonProperty("value")] 
        public DateTimeOffset Value { get; internal set; }

        [JsonProperty("grain")] 
        public string Grain { get; internal set; }
    }

    public class DatetimeValue
    {
        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Value { get; internal set; }

        [JsonProperty("grain", NullValueHandling = NullValueHandling.Ignore)]
        public string Grain { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("to", NullValueHandling = NullValueHandling.Ignore)]
        public DatetimeFrom To { get; internal set; }

        [JsonProperty("from", NullValueHandling = NullValueHandling.Ignore)]
        public DatetimeFrom From { get; internal set; }
    }

    public class Duration
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("second")]
        public int Second { get; internal set; }

        [JsonProperty("value")] 
        public int Value { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("unit")] 
        public string Unit { get; internal set; }

        [JsonProperty("normalized")] 
        public NormalizedClass Normalized { get; internal set; }
    }

    public class Location
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("value")]
        public string Value { get; internal set; }

        [JsonProperty("resolved")] 
        public Resolved Resolved { get; internal set; }
    }

    public class Resolved
    {
        [JsonProperty("values")] 
        public List<ResolvedValue> Values { get; internal set; }
    }

    public class ResolvedValue
    {
        [JsonProperty("name")] 
        public string Name { get; internal set; }

        [JsonProperty("grain")] 
        public string Grain { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("timezone")] 
        public string Timezone { get; internal set; }

        [JsonProperty("coords")] 
        public Coords Coords { get; internal set; }

        [JsonProperty("external")] 
        public PurpleExternal External { get; internal set; }
    }

    public class Coords
    {
        [JsonProperty("lat")] 
        public double Latitude { get; internal set; }

        [JsonProperty("long")] 
        public double Longitude { get; internal set; }
    }

    public class PurpleExternal
    {
        [JsonProperty("geonames")] 
        public string Geonames { get; internal set; }

        [JsonProperty("wikipedia")] 
        public string Wikipedia { get; internal set; }
    }

    public class NotablePerson
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("value")] 
        public NotablePersonValue Value { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }
    }

    public class NotablePersonValue
    {
        [JsonProperty("name")] 
        public string Name { get; internal set; }

        [JsonProperty("external")] 
        public FluffyExternal External { get; internal set; }
    }

    public class FluffyExternal
    {
        [JsonProperty("wikidata")] 
        public string Wikidata { get; internal set; }

        [JsonProperty("wikipedia")] 
        public string Wikipedia { get; internal set; }
    }

    public class Number
    {
        [JsonProperty("confidence")]
        public double Confidence { get; internal set; }

        [JsonProperty("value")] 
        public int Value { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("unit", NullValueHandling = NullValueHandling.Ignore)]
        public string Unit { get; internal set; }
    }

    public class Quantity
    {
        [JsonProperty("confidence")] 
        public int Confidence { get; internal set; }

        [JsonProperty("value")] 
        public int Value { get; internal set; }

        [JsonProperty("type")] 
        public string Type { get; internal set; }

        [JsonProperty("product")] 
        public string Product { get; internal set; }

        [JsonProperty("unit")] 
        public string Unit { get; internal set; }

        [JsonProperty("from")] 
        public QuantityFrom From { get; internal set; }
    }

    public class QuantityFrom
    {
        [JsonProperty("value")] 
        public int Value { get; internal set; }

        [JsonProperty("product")] 
        public string Product { get; internal set; }

        [JsonProperty("unit")] 
        public string Unit { get; internal set; }
    }

    public class Url
    {
        [JsonProperty("confidence")] 
        public double Confidence { get; internal set; }

        [JsonProperty("domain")] 
        public string Domain { get; internal set; }

        [JsonProperty("value")] 
        public string Value { get; internal set; }
    }

    public class Stats
    {
        internal Stats()
        {
        }

        [JsonProperty("total_time")] public int TotalTime { get; internal set; }
    }
}