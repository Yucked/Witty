namespace Wit.Net.Objects
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    /// <summary></summary>
    public partial class SentenceObject
    {
        /// <summary>Either the ID you passed to the API or an ID generated by the API</summary>
        [JsonProperty("msg_id")]
        public string MessageId { get; internal set; }
        /// <summary>Either the text sent in the q argument or the transcript of the speech input. This value should be used only for debug as Wit.ai focuses on entities.</summary>
        [JsonProperty("_text")]
        public string Text { get; internal set; }
        /// <summary>Object of entities. Each entity will contain an array [] of values even if there is only one value.</summary>
        [JsonProperty("entities")]
        public Entities Entities { get; internal set; }
    }

    /// <summary> Provides a list of all intents</summary>
    public partial class Entities
    {
        /// <summary></summary>
        [JsonProperty("intent")]
        public List<Intent> Intent { get; internal set; }
    }

    /// <summary></summary>
    public partial class Intent
    {
        /// <summary></summary>
        [JsonProperty("confidence")]
        public double Confidence { get; internal set; }
        /// <summary></summary>
        [JsonProperty("value")]
        public string Value { get; internal set; }
        /// <summary></summary>
        [JsonProperty("Unit", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string Unit { get; internal set; }
    }

    /// <summary></summary>
    public partial class Stats
    {
        /// <summary></summary>
        [JsonProperty("total_time")]
        public int TotalTime { get; internal set; }
    }
}
